version: '3'

services:

  kafka_b:
    image: docker.io/bitnami/kafka:3.4
    hostname: kafka_b
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka_b:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --topic test-topic --describe"]
      interval: 2s
      timeout: 2s
      retries: 15

  producer:
    build:
      context: ./parser_producer
    container_name: producer_container
    restart: on-failure
    depends_on:
      kafka_b:
        condition: service_healthy

  #  redis:
  #    image: redis:7.2-alpine
  #    container_name: redis_container_parser
  #    restart: on-failure
  #    ports:
  #      - "26379:6379"
  #    volumes:
  #      - redis_data_parser:/data
  #    healthcheck:
  #      test: [ "CMD", "redis-cli", "ping" ]
  #      interval: 3s
  #      timeout: 3s
  #      retries: 3
volumes:
  kafka_data:
    driver: local

